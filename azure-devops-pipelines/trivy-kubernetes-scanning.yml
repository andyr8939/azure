trigger:
  branches:
    include:
    - main
  paths:
   include:
     - k8s/
   exclude:
     - azure-pipelines.yml

name: $(Date:yy.MM)$(Rev:.r)-$(SourceBranchName)

pool:
  vmImage: ubuntu-latest

stages:

- stage: Check_All_Configs
  # condition: succeeded()
  jobs:
  - deployment: Trivy_Scan
    environment: 'All-Shared'
    strategy:
      runOnce:
        deploy:
          steps:
            
          - checkout: self

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                sudo apt-get install wget apt-transport-https gnupg lsb-release -y
                wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
                echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
                sudo apt-get update -y
                sudo apt-get install trivy -y
            displayName: 'Trivy - Install'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                trivy config '$(System.DefaultWorkingDirectory)'
                
                trivy config --severity LOW,MEDIUM --format template --template "@/usr/local/share/trivy/templates/junit.tpl" -o $(System.DefaultWorkingDirectory)/trivy-junit-report-low-med.xml '$(System.DefaultWorkingDirectory)'
                trivy config --severity HIGH,CRITICAL --format template --template "@/usr/local/share/trivy/templates/junit.tpl" -o $(System.DefaultWorkingDirectory)/trivy-junit-report-high-crit.xml '$(System.DefaultWorkingDirectory)'
            displayName: 'Trivy - Run'
            continueOnError: true

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'trivy-junit-report-low-med.xml'
              mergeTestResults: true
              failTaskOnFailedTests: false
              testRunTitle: 'Trivy - Low and Medium Vulnerabilities - $(Build.DefinitionName)'
            displayName: 'Trivy - Publish Low and Medium Test Results' 
            condition: 'always()'   

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'trivy-junit-report-high-crit.xml'
              mergeTestResults: true
              failTaskOnFailedTests: false # TODO This needs to be true eventually
              testRunTitle: 'Trivy - High and Critical Vulnerabilities - $(Build.DefinitionName)'
            displayName: 'Trivy - Publish High and Critical Test Results' 
            condition: 'always()'